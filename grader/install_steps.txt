Installation steps:

0. Update apt and system
    >> sudo apt update
    >> sudo apt upgrade
    >> sudo apt full-upgrade
    >> sudo update-alternatives --config editor
0.1. Install additional system libraries needed for the grader
    >> sudo apt install util-linux
1. (optional) Install Python and PyPy.
    Similarly to other languages, if you are not satisfied with the current version installed with
    your distribution (or there is none), proceed with the steps below.
1.1. Install latest version of Python in a virtual environment
    >> curl https://pyenv.run | bash
    >> do what the scritp suggests doing (add things to ~/.bashrc and ~/.bash_profile or ~/.profile)
    >> pyenv install 3.12.2
    >> pyenv virtualenv 3.12.2 action-grader
    >> pyenv local action-grader
    >> make install
1.2. Install PyPy (used to actually run user's submissions written in Python):
    (Note that newest pypy may be different; check here: https://www.pypy.org/download.html)
    >> wget https://downloads.python.org/pypy/pypy3.10-v7.3.17-linux64.tar.bz2
    >> tar xf pypy3.10-v7.3.17-linux64.tar.bz2
    >> rm pypy3.10-v7.3.17-linux64.tar.bz2
    >> sudo mv pypy3.10-v7.3.17-linux64 /usr/local/lib/
    >> sudo ln -s /usr/local/lib/pypy3.10-v7.3.17-linux64/bin/pypy /usr/bin/pypy
    Verify that the correct pypy is used (can be left-over from previous install):
    >> pypy --version
    Note that since we will run the solutions with pypy, we want to install some libraries that will be
    available to the contestants (e.g., numpy and pandas). We also install psutil as it is used by the
    grader "interactors" for one-player and two-player games.
    >> pypy -m ensurepip
    >> pypy -m pip install --upgrade pip wheel
    >> pypy -m pip install psutil numpy pandas pyflakes
2. (optional) Install latest version of GCC/G++.
    Similarly to other languages, if you are not satisfied with the current version installed with
    your distribution (or there is none), proceed with the steps below.
2.1. Check which version of G++ is currently installed (if any)
    >> g++ --version
3.2. If not installed (or too old), install a newer one
    >> sudo apt install g++
3. (optional) Install latest version of Java
    Similarly to other languages, if you are not satisfied with the current version installed with
    your distribution (or there is none), proceed with the steps below.
3.1. Check which version of Java is currently installed (if any)
    >> java --version
3.2. If not installed (or too old), install the newest one:
    >> sudo apt install openjdk-11-jdk-headless
3.3. In case you had an older one, you may need to make the new one default
    >> sudo update-alternatives --config java
    >> sudo update-alternatives --config javac
    >> sudo update-alternatives --config jar
4. Clone the project
    >> sudo apt install git
    >> cd <path_to_where_you_want_it>
    >> git clone https://github.com/espr1t/action.git
5. Install the project's requirements (from the project's base directory, e.g. ~/action/grader)
   You may have done that already in step 1.1.
    >> make install
6. (Optional) Set the port on which the web server will run (default is 5000)
    open action/grader/server.py and change port='5000' to port='<whatever_you_want>'.
7. Allow the port on which the server will run
7.1. Install ufw (may be unnecessary):
    >> sudo apt install ufw
7.2. Use ufw to allow the port (change if not using the default port 5000):
    >> sudo ufw allow 5000
8. Install PDF printing utility (https://wkhtmltopdf.org)
    >> sudo apt install xvfb libfontconfig wkhtmltopdf
8.1. (Optional) Install fonts (needs to be in <root_dir>/grader/ folder):
    sudo cp fonts/* /usr/local/share/fonts
9. One-time initialization of users and sandbox directories
9.1. Create sandbox directories and users
    >> make init
9.2. Remove password prompts for "sudo" commands
    (sudo is not allowed for the workerXX users, but prompts for passwords can lead to problems):
    >> sudo visudo
    >> Add the line "%workers ALL=(ALL) NOPASSWD: !ALL" at the bottom
10. Finally, run the service as root (from the project's base directory, e.g. /home/grader/action):
    >> make run
11. (Optional) Run it automatically on OS load:
11.1. Add it to the list of cronjobs on system start:
    >> sudo crontab -e
    Add: "@reboot /home/grader/.pyenv/versions/action-grader/bin/python /home/grader/action/grader/server.py"
    (with correct paths to virtual environment python binary and also server.py)
#11.2. Run "update-rc.d cron defaults" (may not be needed)

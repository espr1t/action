Installation steps:

0. Update apt and system
    >> sudo apt update
    >> sudo apt upgrade
    >> sudo apt full-upgrade
    >> sudo update-alternatives --config editor
1. (optional) Install Python andPypy.
    Similarly to other languages, if you are not satisfied with the current version installed with
    your distribution (or there is none), proceed with the steps below.
1.1. Install latest version of Python and make it the default
    >> sudo add-apt-repository ppa:deadsnakes/ppa
    >> sudo apt update
    >> apt list | grep python3.8
    >> sudo apt install python3.8 python3.8-dev
1.2. Change default python3 version to be the newest one
    >> sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
    >> sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2
    >> sudo update-alternatives --config python3
1.3. By changing the default version we most likely break apt (which needs python3.6). Do the following:
    >> cd /usr/lib/python3/dist-packages
    >> sudo ln -s apt_pkg.cpython-36m-x86_64-linux-gnu.so apt_pkg.so
1.4. Install PIP (python's package manager)
    >> sudo apt install python3-pip
    >> pip3 install --upgrade pip
1.5. Install PyPy (used to actually run user's submissions written in Python):
    >> sudo apt install pypy3
    >> pypy3 -m pip install pyflakes
2. (optional) Install latest version of GCC/G++.
    Similarly to other languages, if you are not satisfied with the current version installed with
    your distribution (or there is none), proceed with the steps below.
2.1. Check which version of G++ is currently installed (if any)
    >> g++ --version
3.2. If not installed (or too old), install a newer one
    >> sudo apt install g++
3. (optional) Install latest version of Java
    Similarly to other languages, if you are not satisfied with the current version installed with
    your distribution (or there is none), proceed with the steps below.
3.1. Check which version of Java is currently installed (if any)
    >> java --version
3.2. If not installed (or too old), install the newest one:
    >> sudo apt install openjdk-11-jdk-headless
3.3. In case you had an older one, you may need to make the new one default
    >> sudo update-alternatives --config java
    >> sudo update-alternatives --config javac
    >> sudo update-alternatives --config jar
4. Clone the project
    >> sudo apt install git
    >> cd <path_to_where_you_want_it>
    >> git clone https://github.com/espr1t/action.git
5. Install the project's requirements (from the project's base directory, e.g. ~/action/grader)
    >> make install
6. (Optional) Set the port on which the web server will run (default is 5000)
    open action/grader/server.py and change port='5000' to port='<whatever_you_want>'.
7. Allow the port on which the server will run
7.1. Install ufw (may be unnecessary):
    >> sudo apt install ufw
7.2. Use ufw to allow the port (change if not using the default port 5000):
    >> sudo ufw allow 5000
8. Install PDF printing utility (https://wkhtmltopdf.org)
    >> sudo apt install xvfb libfontconfig wkhtmltopdf
8.1. (Optional) Install fonts (needs to be in <root_dir>/grader/ folder):
    sudo cp fonts/* /usr/local/share/fonts
9. One-time initialization of users and sandbox directories
9.1. Create sandbox directories and users
    >> make init
9.2. Remove password prompts for "sudo" commands
    (sudo is not allowed for the workerXX users, but prompts for passwords can lead to problems):
    >> sudo visudo
    >> Add the line "%workers ALL=(ALL) NOPASSWD: !ALL" at the bottom
10. Finally, run the service as root (from the project's base directory, e.g. /home/grader/action):
    >> make run
11. (Optional) Run it automatically on OS load:
11.1. Add it to the list of cronjobs on system start:
    >> sudo crontab -e
    Add "@reboot python3 /home/grader/action/grader/server.py" (with correct path to server.py)
#11.2. Run "update-rc.d cron defaults" (may not be needed)
